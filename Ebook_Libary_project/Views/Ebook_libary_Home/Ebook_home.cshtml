@using Ebook_Library_Project
@using EbookLibraryProject.Models

@{
    ViewBag.Title = "Ebook_home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            font-family: Arial, Helvetica, sans-serif;
        }

        .topnav {
            display: flex;
            justify-content: flex-end;
            align-items: inherit;
            padding: 5px 10px;
            margin-top: 9px;
            margin-bottom: 9px;
            background-color: #e9e9e9;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

            .topnav .search-container {
                display: flex;
                max-width: 300px;
                margin-right: 5px;
            }

            .topnav input[type=text] {
                padding: 6px;
                font-size: 17px;
                border: none;
                flex-grow: 1;
            }

            .topnav button {
                padding: 5px 10px;
                margin-left: 5px;
                background: #ddd;
                font-size: 20px;
                border: none;
                cursor: pointer;
            }

        .scrollmenu {
            display: flex;
            overflow-x: auto;
            border: 2px solid #e9ecef;
            padding: 10px;
            white-space: nowrap;
        }

            .scrollmenu .column {
                flex: 0 0 auto;
                width: 25%;
                margin-right: 10px;
                background-color: #f1f1f1;
                padding: 20px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                text-align: center;
            }

            .scrollmenu::-webkit-scrollbar {
                height: 8px;
            }

            .scrollmenu::-webkit-scrollbar-thumb {
                background-color: #777;
                border-radius: 10px;
            }

            .scrollmenu::-webkit-scrollbar-track {
                background: #333;
            }
    </style>
</head>
<body>
    <div class="topnav">
        <div class="search-container">
            <form action="/Search">
                <input type="text" placeholder="Search.." name="search">
                <button type="submit"><i class="fa fa-search"></i></button>
            </form>
        </div>
    </div>

    <h2>Recommended Books</h2>
    <div class="scrollmenu">
        @{
            var bookIds = Userdatabase.GetAllBookIds();
            foreach (var bookId in bookIds)
            {
                var book = Userdatabase.GetBookById(bookId);
                if (book != null)
                {
                    <div class="column">
                        <a href="@Url.Action("BookPage", "User", new { id = book.Id })" style="text-decoration: none; color: inherit;">
                            <h3>@book.Name</h3>
                            <p>Author: @book.Author</p>
                            @if (book.Sale > 0)
                            {
                                <p>
                                    <span style="text-decoration: line-through; color: red;">
                                        Original Price: @book.BuyingPrice.ToString("C")
                                    </span>
                                </p>
                                <p>Sale Price: <span style="color: green;">@(book.BuyingPrice - book.Sale).ToString("C")</span></p>
                            }
                            else
                            {
                                <p>Price: @book.BuyingPrice.ToString("C")</p>
                            }
                        </a>
                    </div>
                }
            }
        }
    </div>

    <h2>My List</h2>
    <div class="scrollmenu">
        @{
            var boughtBooks = Userdatabase.GetBoughtBookIdsByUser(Usermodel.Id);
            var borrowedBooks = Userdatabase.GetBorrowedBookIdsByUser(Usermodel.Id);

            foreach (var bookId in boughtBooks)
            {
                var book = Userdatabase.GetBookById(bookId);
                if (book != null)
                {
                    <div class="column">
                        <a href="@Url.Action("BookPage", "User", new { id = book.Id })" style="text-decoration: none; color: inherit;">
                            <h3>@book.Name</h3>
                            <p>Author: @book.Author</p>
                            <p>Status: Bought</p>
                        </a>
                    </div>
                }
            }

            foreach (var bookId in borrowedBooks)
            {
                var book = Userdatabase.GetBookById(bookId);
                if (book != null)
                {
                    <div class="column">
                        <a href="@Url.Action("BookPage", "User", new { id = book.Id })" style="text-decoration: none; color: inherit;">
                            <h3>@book.Name</h3>
                            <p>Author: @book.Author</p>
                            <p>Return Date: @(DateTime.Now.AddDays(14).ToString("yyyy-MM-dd"))</p>
                            <p>Status: Borrowed</p>
                        </a>
                    </div>
                }
            }
        }
    </div>
</body>
</html>
