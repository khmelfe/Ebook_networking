@using Ebook_Libary_project.Models
@using Ebook_Library_Project

@{
    ViewBag.Title = "Ebook Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
        }

        .topnav {
            display: flex;
            justify-content: flex-end;
            align-items: inherit;
            padding: 5px 10px;
            margin-top: 9px;
            margin-bottom: 9px;
            background-color: #e9e9e9;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .scrollmenu {
            display: flex;
            overflow-x: auto;
            border: 2px solid #e9ecef;
            padding: 10px;
            white-space: nowrap;
        }

            .scrollmenu .column {
                flex: 0 0 auto;
                width: 25%;
                margin-right: 10px;
                background-color: #f1f1f1;
                padding: 20px;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                text-align: center;
                position: relative;
                overflow: hidden;
                word-wrap: break-word;
                word-break: break-word;
            }

                .scrollmenu .column h3 {
                    white-space: normal;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    max-height: 3em;
                    line-height: 1.5em;
                    margin-bottom: 10px;
                }

            .scrollmenu::-webkit-scrollbar {
                height: 8px;
            }

            .scrollmenu::-webkit-scrollbar-thumb {
                background-color: #777;
                border-radius: 10px;
            }

            .scrollmenu::-webkit-scrollbar-track {
                background: #333;
            }

        .return-date {
            color: red;
            font-weight: bold;
        }

        .login-message {
            font-size: 18px;
            color: darkred;
            text-align: center;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="topnav">
        <div class="search-container">
            <form action="/Search">
                <input type="text" placeholder="Search.." name="search">
                <button type="submit"><i class="fa fa-search"></i></button>
            </form>
        </div>
    </div>

    <h2>Recommended Books</h2>
    <div class="scrollmenu">
        @* Recommended books section *@
        @{
            var bookIds = Userdatabase.GetAllBookIds();
            foreach (var bookId in bookIds)
            {
                var book = Userdatabase.GetBookById(bookId);
                if (book != null)
                {
                    <div class="column">
                        <a href="@Url.Action("BookPage", "User", new { id = book.Id })" style="text-decoration: none; color: inherit;">
                            <h3>@book.Name</h3>
                            <p>Author: @book.Author</p>
                            <p>Min Age: @book.minage</p>
                            @if (book.Sale > 0)
                            {
                                decimal saleFactor = book.Sale / 100m;
                                decimal discountedBuyingPrice = book.BuyingPrice * (1 - saleFactor);

                                <p>
                                    <span style="text-decoration: line-through; color: red;">
                                        Buying Price: @book.BuyingPrice.ToString("C")
                                    </span>
                                </p>
                                <p>
                                    <span style="color: green;">
                                        Discounted Price: @discountedBuyingPrice.ToString("C")
                                    </span>
                                </p>
                            }
                            else
                            {
                                <p>Buying Price: @book.BuyingPrice.ToString("C")</p>
                            }
                        </a>
                    </div>
                }
            }
        }
    </div>

    @if (ViewBag.Message != null)
    {
        <p class="login-message">@ViewBag.Message</p>
    }
    else
    {
        <h2>Your Bought Books</h2>
        <div class="scrollmenu">
            @if (ViewBag.BoughtBooks != null && ((List<BookModel>)ViewBag.BoughtBooks).Any())
            {
                foreach (var book in (List<BookModel>)ViewBag.BoughtBooks)
                {
                    <div class="column">
                        <div style="text-decoration: none; color: inherit; cursor: default;">
                            <h3>@book.Name</h3>
                            <p>Author: @book.Author</p>
                            <button class="btn btn-danger" onclick="confirmRemoveBoughtBook( @book.Id)">Remove</button>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No bought books to display.</p>
            }
        </div>

        <h2>Your Borrowed Books</h2>
        <div class="scrollmenu">
            @if (ViewBag.BorrowedBooks != null && ((List<(BookModel Book, DateTime ReturnDate)>)ViewBag.BorrowedBooks).Any())
            {
                foreach (var borrowed in (List<(BookModel Book, DateTime ReturnDate)>)ViewBag.BorrowedBooks)
                {
                    <div class="column">
                        <div style="text-decoration: none; color: inherit; cursor: default;">
                            <h3>@borrowed.Book.Name</h3>
                            <p>Author: @borrowed.Book.Author</p>
                            <p class="return-date">Return Date: @borrowed.ReturnDate.ToShortDateString()</p>
                            <button class="btn btn-warning" onclick="confirmReturnBook( @borrowed.Book.Id)">Return</button>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No borrowed books to display.</p>
            }
        </div>
    }
</body>
<script>
    function confirmRemoveBoughtBook(bookId) {
        if (confirm("Are you sure you want to remove this book?")) {
            $.ajax({
                url: '/Ebook_libary_Home/RemoveBoughtBook',
                type: 'POST',
                data: { bookId: bookId },
                success: function (response) {
                    alert(response.message);
                    if (response.success) {
                        location.reload();
                    }
                },
                error: function () {
                    alert("An error occurred while removing the book.");
                }
            });
        }
    }

    function confirmReturnBook(bookId) {
        if (confirm("Are you sure you want to return this book?")) {
            $.ajax({
                url: '/Ebook_libary_Home/ReturnBook',
                type: 'POST',
                data: { bookId: bookId },
                success: function (response) {
                    alert(response.message);
                    if (response.success) {
                        location.reload();
                    }
                },
                error: function () {
                    alert("An error occurred while returning the book.");
                }
            });
        }
    }

</script>
</html>
