@{
    ViewBag.Title = "Payment";
    var cart = ViewBag.Cart;
    var creditCard = ViewBag.CreditCard;
}

<h2>Payment</h2>

<style>
    .frame {
        background-color: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    h2, h3 {
        color: #002366;
        font-weight: bold;
        text-align: center;
    }

    input[type="text"] {
        width: 100%;
        padding: 8px;
        margin: 10px 0;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease, border 0.3s ease;
    }

        input[type="text"]:focus {
            border-color: #002366;
            box-shadow: 0 0 5px rgba(0, 35, 102, 0.5);
            outline: none;
        }

    .btn {
        padding: 8px 16px;
        border-radius: 15px;
        transition: all 0.3s ease;
        font-size: 0.9rem;
    }

    .btn-success {
        background-color: #0047AB;
        color: white;
        border: none;
    }

        .btn-success:hover {
            background-color: #003580;
            transform: scale(1.05);
        }

    .btn-paypal {
        background-color: #ffc439;
        color: #002366;
        border: none;
        text-transform: uppercase;
        font-weight: bold;
        font-size: 0.9rem;
        padding: 8px 16px;
    }

        .btn-paypal:hover {
            background-color: #f5b800;
            transform: scale(1.05);
        }

    .cart-total {
        font-size: 1.3rem;
        font-weight: bold;
        color: #0047AB;
        text-align: center;
        margin-bottom: 20px;
    }

    form {
        max-width: 400px;
        margin: 0 auto;
    }

    label {
        font-weight: bold;
        color: #002366;
        display: block;
        margin-bottom: 5px;
    }

    .paypal-container {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }
</style>

<div class="container">
    <div class="frame">
        <h2>Payment</h2>

        @if (cart != null && cart.Items.Count > 0)
        {
            <div class="cart-total">
                Total: @cart.CalculateTotalPrice().ToString("C")
            </div>

            <h3>Payment Details</h3>
            <form method="post" action="/Payment/paymentconfirm" onsubmit="return validatePaymentForm()">
                <div>
                    <label for="cardNumber">Card Number:</label>
                    <input type="text" id="cardNumber" name="cardNumber" required pattern="^\d{16}$" maxlength="16"
                           placeholder="1234567812345678"
                           value="@(creditCard != null ? creditCard.CreditCardNumber : "")" />
                </div>

                <div>
                    <label for="expiry">Expiry Date (MM/YY):</label>
                    <input type="text" id="expiry" name="expiry" required pattern="^(0[1-9]|1[0-2])\/\d{2}$"
                           placeholder="MM/YY"
                           value="@(creditCard != null ? creditCard.ValidDate : "")" />
                </div>

                <div>
                    <label for="cvv">CVC:</label>
                    <input type="text" id="cvv" name="cvv" required pattern="^\d{3}$" maxlength="3"
                           value="@(creditCard != null ? creditCard.CVC : "")" />
                </div>

                <div style="text-align: center; margin-top: 20px;">
                    <button type="submit" class="btn btn-success">Confirm Payment</button>
                </div>
            </form>

            <div class="paypal-container">
                <a href="https://www.paypal.com/il/home" target="_blank">
                    <button class="btn btn-paypal">Pay with PayPal</button>
                </a>
            </div>
        }
        else
        {
            <p>Your cart is currently empty. You cannot proceed with payment.</p>
        }
    </div>
</div>

<script>
    function validatePaymentForm() {
        const expiry = document.getElementById('expiry').value;
        const expiryRegex = /^(0[1-9]|1[0-2])\/\d{2}$/;

        if (!expiryRegex.test(expiry)) {
            alert('Invalid expiry date format. Please use MM/YY.');
            return false;
        }

        const [month, year] = expiry.split('/').map(Number);
        const currentYear = new Date().getFullYear() % 100;
        const currentMonth = new Date().getMonth() + 1;

        if (year < currentYear || (year === currentYear && month < currentMonth)) {
            alert('Expiry date cannot be in the past.');
            return false;
        }

        return true;
    }
</script>
