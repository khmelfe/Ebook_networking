@model Ebook_Libary_project.Models.BookModel

<div class="book-details">
    <h2>@Model.Name</h2>
    <img src="@Model.ImagePath" alt="@Model.Name" style="max-width: 200px; max-height: 300px;" />
    <p><strong>Author:</strong> @Model.Author</p>
    <p>
        <strong>Buying Price:</strong>
        @if (@Model.Sale > 0)
        {
            <span class="text-decoration-line-through">@Model.BuyingPrice</span>
            <span class="text-success">
                @(@Model.BuyingPrice - (@Model.BuyingPrice * @Model.Sale / 100m))
            </span>
        }
        else
        {
            @Model.BuyingPrice
        }
    </p>
    <p>
        <strong>Borrowing Price:</strong>
        @if (@Model.Sale > 0)
        {
            <span class="text-decoration-line-through">@Model.BorrowPrice</span>
            <span class="text-success">
                @(@Model.BorrowPrice - (@Model.BorrowPrice * @Model.Sale / 100m))
            </span>
        }
        else
        {
            @Model.BorrowPrice
        }
    </p>
    <p><strong>Available Copies:</strong> @Model.AvailableCopies</p>

    <!-- Format Selection -->
    <div>
        <label for="formatSelect"><strong>Select Format:</strong></label>
        <select id="formatSelect" class="form-select">
            <option value="ebook">Ebook</option>
            <option value="hardcover">Hardcover</option>
            <option value="paperback">Paperback</option>
        </select>
    </div>

    <!-- Borrow or Buy Selection -->
    <div>
        <label><strong>Choose Action:</strong></label>
        <div>
            <input type="radio" id="borrowOption" name="action" value="borrow" checked />
            <label for="borrowOption">Borrow</label>
        </div>
        <div>
            <input type="radio" id="buyOption" name="action" value="buy" />
            <label for="buyOption">Buy</label>
        </div>
    </div>

    <!-- Buttons -->
    <button id="buyNowButton" class="btn btn-primary">Buy Now</button>
    <button id="addToCartButton" class="btn btn-secondary">Add to Cart</button>
</div>

<div class="reviews-section">
    <h3>Reviews</h3>
    <div id="reviews">
        <!-- Reviews will be dynamically loaded here -->
    </div>

    <h4>Add a Review</h4>
    <textarea id="newReview" placeholder="Write your review here"></textarea>
    <button id="submitReviewButton" class="btn btn-success">Submit Review</button>
</div>

<script>
    const bookId = @Model.Id; // Use the book ID for review actions

    // Load and display reviews
    function loadReviews() {
        $.ajax({
            url: '/User/GetReviews',
            type: 'GET',
            data: { bookid: bookId },
            success: function (response) {
                if (response.success) {
                    const reviewsDiv = document.getElementById('reviews');
                    reviewsDiv.innerHTML = '';
                    response.reviews.forEach(review => {
                        reviewsDiv.innerHTML += `<p>User ${review.UserId}: ${review.ReviewText}</p>`;
                    });
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error loading reviews:", error);
            }
        });
    }

    // Add to Cart functionality
    document.getElementById('addToCartButton').onclick = function () {
        const format = document.getElementById('formatSelect').value;
        const action = document.querySelector('input[name="action"]:checked').value;

        $.ajax({
            url: '/User/AddToCart',
            type: 'POST',
            data: { bookId: bookId, action: action, format: format },
            success: function (response) {
                if (!response.success && response.waitingListLength !== undefined) {
                    // Show the waiting list prompt
                    if (confirm(`${response.message} The waiting list length is ${response.waitingListLength}. Do you want to join?`)) {
                        // User chose to join the waiting list
                        $.ajax({
                            url: '/User/AddToCart',
                            type: 'POST',
                            data: { bookId: bookId, action: action, format: format, joinWaitingList: true },
                            success: function (res) {
                                alert(res.message);
                            },
                            error: function (xhr, status, error) {
                                console.error("Error adding to waiting list:", error);
                            }
                        });
                    } else {
                        alert("You chose not to join the waiting list.");
                    }
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error adding to cart:", error);
            }
        });
    };

 document.getElementById('buyNowButton').onclick = function () {
    const format = document.getElementById('formatSelect').value;
    const action = document.querySelector('input[name="action"]:checked').value; // Get the selected action dynamically

    $.ajax({
        url: '/User/Buynow',
        type: 'POST',
        data: { bookId: @Model.Id, action: action, format: format },
        success: function (response) {
            if (!response.success && response.waitingListLength !== undefined) {
                // Show the waiting list prompt only once
                if (confirm(`${response.message} The waiting list length is ${response.waitingListLength}. Do you want to join?`)) {
                    // User chose to join the waiting list
                    $.ajax({
                        url: '/User/Buynow',
                        type: 'POST',
                        data: { bookId: @Model.Id, action: action, format: format, joinWaitingList: true },
                        success: function (res) {
                            if (res.success) {
                                // Redirect to payment if joining the waiting list succeeds
                                window.location.href = '/Payment';
                            } else {
                                alert(res.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error processing waiting list join:", error);
                        }
                    });
                } else {
                    alert("You chose not to join the waiting list.");
                }
            } else if (response.success) {
                // Redirect to payment if successful
                window.location.href = '/Payment';
            } else {
                alert(response.message);
            }
        },
        error: function (xhr, status, error) {
            console.error("Error processing Buy Now:", error);
            alert("An error occurred while processing your request.");
        }
    });
};


    // Add a new review
    document.getElementById('submitReviewButton').onclick = function () {
        const newReview = document.getElementById('newReview').value;

        if (!newReview) {
            alert("Please write a review before submitting.");
            return;
        }

        $.ajax({
            url: '/User/AddReview',
            type: 'POST',
            data: { bookid: bookId, review: newReview },
            success: function (response) {
                if (response.success) {
                    alert(response.message);
                    loadReviews(); // Refresh reviews
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error adding review:", error);
            }
        });
    };

    // Load reviews when the page is loaded
    document.addEventListener('DOMContentLoaded', loadReviews);
</script>
